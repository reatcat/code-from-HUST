#include <stdio.h>   
   int main()  
{  int a[50][50];
int b[50][50]={0};
int n,m;
scanf("%d %d",&n,&m);
int  i=0,j=0;
for(i=0;i<n;i++)
{
	for(j=0;j<m;j++)
	{
		scanf("%d",&a[i][j]);
	}
 } 
 for(i=0;i<n;)
 {
 	for(j=0;j<m;)
 	{
 		if(a[i][j]==1&&a[i][j+1]==1&&a[i+1][j]==0){
 		b[i][j]=b[i][j+1]=1;
		 j++;continue;	
		 }
 		else if(a[i][j]==1&&a[i][j+1]==0&&a[i+1][j]==1){
 			b[i][j]=b[i+1][j]=1;
 			i++;
 			continue;
		 }
		 else if(a[i][j]==1&&a[i][j+1]==1&&a[])
	 }
 }
 for(i=0;i<n;i++)
{
	for(j=0;j<m;j++)
	{
		scanf("%d",&b[i][j]);
	}
 } 
    return 0;
}  
//实验指导书 P144 程序设计第（11）题
//本关任务：迷宫问题。编程找出从入口（左上角方格）经过迷宫到达出口（右下角方格）的所有路径，迷宫问题示意如下方数字阵列所示，
//0所表示的地方是不可以通行的，只能从1走到与它相邻（四邻域：上、下、左、右相邻）的1上，且不能走重复路径。
//迷宫问题示意图：
//1 0 0 0 0 0 0 0 0 0
//1 0 1 1 0 1 1 1 1 0
//1 1 1 0 0 1 1 0 1 0
//1 0 0 1 1 1 0 0 1 0
//1 1 1 1 0 1 1 1 1 0
//0 0 0 0 0 0 0 0 1 1
//
//本任务由键盘输入迷宫的行数和列数，以及迷宫的图案。
//
//示例
//输入：(前两位数字分别为迷宫的行数和列数)
//6 10
//1 0 0 0 0 0 0 0 0 0
//1 0 1 1 0 1 1 1 1 0
//1 1 1 0 0 1 1 0 1 0
//1 0 0 1 1 1 0 0 1 0
//1 1 1 1 0 1 1 1 1 0
//0 0 0 0 0 0 0 0 1 1
//输出（解的编号、路径）：
//1
//1 0 0 0 0 0 0 0 0 0
//1 0 0 0 0 0 0 0 0 0
//1 0 0 0 0 0 0 0 0 0
//1 0 0 1 1 1 0 0 0 0
//1 1 1 1 0 1 1 1 1 0
//0 0 0 0 0 0 0 0 1 1
//2
//1 0 0 0 0 0 0 0 0 0
//1 0 0 0 0 0 1 1 1 0
//1 0 0 0 0 1 1 0 1 0
//1 0 0 1 1 1 0 0 1 0
//1 1 1 1 0 0 0 0 1 0
//0 0 0 0 0 0 0 0 1 1
//3
//1 0 0 0 0 0 0 0 0 0
//1 0 0 0 0 1 1 1 1 0
//1 0 0 0 0 1 0 0 1 0
//1 0 0 1 1 1 0 0 1 0
//1 1 1 1 0 0 0 0 1 0
//0 0 0 0 0 0 0

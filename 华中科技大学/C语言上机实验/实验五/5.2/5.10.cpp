#include <stdio.h>   
   /*把方阵上的数用两个坐标表示，层，序号，一层就是一圈，最外面的是第一层，序号就是这个数在本层上按螺旋方阵的顺序是第几个。
   每层的数字总数可以通过方阵阶数算出，这样得到一个确定的层和序号就能确定他在方阵中的位置并算出该位置上的数字。
电脑的输出以横纵坐标x，y表示行列，这样只要把一对x，y值转换成一对层，序号值即可，
确定层的算法是：方阵最大的层数  减去  当前坐标与方阵中心的坐标的距离  就是层数。
确定序号的算法是：
层可以均匀分成上下左右四块，用xy坐标确定在那一块上，减去所在块的第一个的坐标再加上前几块的总数就可以算出序号。
这样x，y坐标就被转化成了层，序号坐标，根据层，序号坐标就可以算出数值，输出即可，还加了点功能，可以根据方阵中最大数的位数自动调整输出宽度。
 */ 
int main()  
{  
    int i,j,n,count;  
    int a[100][100] = {0}; //利用二维数组存储 
    scanf("%d",&n);  
    count = 1;  
    for(i=0;i<(n+1)/2;i++)  
    {  
        for (j=i;j<n-i;j++)  
        {  
            a[i][j] = count++;  
        }  
        for (j=i+1;j<n-i;j++)  
        {  
            a[j][n-i-1] = count++;  
        }  
        for (j=n-i-2;j>=i;j--)  
        {  
            a[n-i-1][j] = count++;  
        }  
        for (j=n-i-2;j>i;j--)  
        {  
            a[j][i] = count++;  
        }  
    }  
    for (i=0;i<n;i++)  
    {  
        for (j=0;j<n;j++)  
        {  
            printf("%d ",[i][j]);      
        }  
        printf("\n");  
    }  
    return 0;
}  
